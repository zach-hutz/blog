{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var t=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var l=i=>s(i,\"__esModule\",{value:!0});var u=(i,a)=>()=>(a||i((a={exports:{}}).exports,a),a.exports),g=(i,a)=>{l(i);for(var c in a)s(i,c,{get:a[c],enumerable:!0})},f=(i,a,c)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let n of h(a))!p.call(i,n)&&n!==\"default\"&&s(i,n,{get:()=>a[n],enumerable:!(c=t(a,n))||c.enumerable});return i},b=i=>f(l(s(i!=null?d(m(i)):{},\"default\",i&&i.__esModule&&\"default\"in i?{get:()=>i.default,enumerable:!0}:{value:i,enumerable:!0})),i);var r=u((k,o)=>{o.exports=_jsx_runtime});var y={};g(y,{default:()=>v,frontmatter:()=>w});var e=b(r()),w={title:\"Comparing Javascript Functions\",date:\"2022-08-01\",tags:[\"development\",\"javascript\",\"testing\"],draft:!1,summary:\"Comparing the difference and use cases for the different function types in Javascript.\",layout:\"PostLayout\",canonicalUrl:\"javascript-functions\"};function N(i={}){let{wrapper:a}=i.components||{};return a?(0,e.jsx)(a,Object.assign({},i,{children:(0,e.jsx)(c,{})})):c();function c(){let n=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",hr:\"hr\",h1:\"h1\",em:\"em\",pre:\"pre\",code:\"code\",blockquote:\"blockquote\"},i.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\"overview\",children:[(0,e.jsx)(n.a,{href:\"#overview\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Overview\"]}),(0,e.jsx)(n.p,{children:\"Javascript has multiple ways of specifying and defining functions including a multitude of keywords such as let, const, and function.\"}),(0,e.jsx)(n.p,{children:\"Function names can contain letters, digits, underscores, and dollar signs (same rules as variables).\"}),(0,e.jsx)(n.p,{children:\"The parentheses may include parameter names separated by commas: (parameter1, parameter2, ...)\"}),(0,e.jsx)(n.p,{children:\"The code to be executed, by the function, is placed inside curly brackets: \"}),(0,e.jsx)(n.p,{children:\"In this example, it's only adding 1+1 and logging it to the console, a thousand times.\"}),(0,e.jsx)(n.p,{children:\"I then average out the runtime which is how I got to the numbers listed below.\"}),(0,e.jsx)(n.hr,{}),(0,e.jsxs)(n.h1,{id:\"function-declaration\",children:[(0,e.jsx)(n.a,{href:\"#function-declaration\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Function Declaration\"]}),(0,e.jsxs)(n.p,{children:[\"Function Declaration is the traditional way to define a function. It is somehow similar to the way we define a function in other programming languages. We start declaring using the keyword \",(0,e.jsx)(n.em,{children:\"function\"}),\".\"]}),(0,e.jsx)(n.p,{children:\"Then we write the function name and then parameters.\"}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`function add(a, b) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  console.log(a+b)\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`}\n`})]})}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"Average Runtime: 32.00 milliseconds\"})}),(0,e.jsx)(n.hr,{}),(0,e.jsxs)(n.h1,{id:\"function-expressions\",children:[(0,e.jsx)(n.a,{href:\"#function-expressions\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Function Expressions\"]}),(0,e.jsxs)(n.p,{children:[\"Function Expression is another way to define a function in JavaScript. Here we define a function using the variable identifiers \",(0,e.jsx)(n.em,{children:\"const\"}),\", \",(0,e.jsx)(n.em,{children:\"let\"}),\", and \",(0,e.jsx)(n.em,{children:\"var\"}),\".\"]}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`const add = function(a, b) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    console.log(a+b);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`}\n`})]})}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"Average Runtime: 31.74 milliseconds\"})}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`let add = function(a, b) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    console.log(a+b);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`}\n`})]})}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"Average Runtime: 31.72 milliseconds\"})}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`var add = function(a, b) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    console.log(a+b);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`}\n`})]})}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"Average Runtime: 31.64 milliseconds\"})}),(0,e.jsx)(n.hr,{}),(0,e.jsxs)(n.h1,{id:\"arrow-functions\",children:[(0,e.jsx)(n.a,{href:\"#arrow-functions\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Arrow Functions\"]}),(0,e.jsxs)(n.p,{children:[\"Arrow functions have been introduced in the \",(0,e.jsx)(n.a,{href:\"https://www.w3schools.com/Js/js_es6.asp\",children:\"ES6 version\"}),\" of JavaScript. It is used to shorten the code. Here we do not use the \",(0,e.jsx)(n.em,{children:\"function\"}),\" keyword and instead use the arrow symbol =>.\"]}),(0,e.jsx)(n.p,{children:\"The arrow symbol is denoted with an equals sign followed by a greater than sign.\"}),(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`let add = (a, b) => console.log(a + b);\n`})})}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"Average Runtime: 31.95 milliseconds\"})}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`const add = (a, b) => console.log(a + b);\n`})})}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"Average Runtime: 32.03 milliseconds\"})}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`var add = (a, b) => console.log(a + b);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`})]})}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"Average Runtime: 32.05 milliseconds\"})}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`const add = (a, b) => {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    console.log(a + b);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`}\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`})]})}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"Average Runtime: 31.74 milliseconds\"})})]})}}var v=N;return y;})();\n;return Component;","toc":[{"value":"Overview","url":"#overview","depth":2},{"value":"Function Declaration","url":"#function-declaration","depth":1},{"value":"Function Expressions","url":"#function-expressions","depth":1},{"value":"Arrow Functions","url":"#arrow-functions","depth":1}],"frontMatter":{"readingTime":{"text":"2 min read","minutes":1.72,"time":103200,"words":344},"slug":"javascript-functions","fileName":"javascript-functions.mdx","title":"Comparing Javascript Functions","date":"2022-08-01T00:00:00.000Z","tags":["development","javascript","testing"],"draft":false,"summary":"Comparing the difference and use cases for the different function types in Javascript.","layout":"PostLayout","canonicalUrl":"javascript-functions"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.375,"time":22500,"words":75},"slug":["default"],"fileName":"default.md","name":"Zach Hutton","avatar":"/static/images/avatar.png","occupation":"Security Analyst","company":"StandardUser Cybersecurity","email":"zacharyhutton99@gmail.com","twitter":"https://twitter.com/ZachHutton99","linkedin":"https://www.linkedin.com/in/zachary-hutton99/","github":"https://github.com/zach-hutz","date":null}],"prev":{"title":"Python Coding Challenge 1","date":"2022-07-31T00:00:00.000Z","tags":["python","development","challenge"],"draft":false,"summary":"Create the longest non-repeating output using the shortest input.","images":[],"layout":"PostLayout","canonicalUrl":"python-challenge-1","slug":"python-coding-challenge-1"},"next":null},"__N_SSG":true}